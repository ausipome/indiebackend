"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var handleEvaluateDataloss_exports = {};
__export(handleEvaluateDataloss_exports, {
  handleUnexecutableSteps: () => handleUnexecutableSteps
});
module.exports = __toCommonJS(handleEvaluateDataloss_exports);
var import_internals = require("@prisma/internals");
var import_chalk = __toESM(require("chalk"));
function handleUnexecutableSteps(unexecutableSteps, createOnly = false) {
  if (unexecutableSteps && unexecutableSteps.length > 0) {
    const messages = [];
    messages.push(`${import_chalk.default.bold.red("\n\u26A0\uFE0F We found changes that cannot be executed:\n")}`);
    for (const item of unexecutableSteps) {
      messages.push(`${(0, import_chalk.default)(`  \u2022 Step ${item.stepIndex} ${item.message}`)}`);
    }
    console.info();
    if (createOnly) {
      console.error(`${messages.join("\n")}
`);
      return void 0;
    } else {
      return `${messages.join("\n")}

You can use ${(0, import_internals.getCommandWithExecutor)(
        "prisma migrate dev --create-only"
      )} to create the migration file, and manually modify it to address the underlying issue(s).
Then run ${(0, import_internals.getCommandWithExecutor)("prisma migrate dev")} to apply it and verify it works.
`;
    }
  }
  return void 0;
}
__name(handleUnexecutableSteps, "handleUnexecutableSteps");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  handleUnexecutableSteps
});
