"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var promptForMigrationName_exports = {};
__export(promptForMigrationName_exports, {
  getMigrationName: () => getMigrationName
});
module.exports = __toCommonJS(promptForMigrationName_exports);
var import_internals = require("@prisma/internals");
var import_slugify = __toESM(require("@sindresorhus/slugify"));
var import_prompts = require("prompts");
async function getMigrationName(name) {
  var _a;
  const maxMigrationNameLength = 200;
  if (name) {
    return {
      name: (0, import_slugify.default)(name, { separator: "_" }).substring(0, maxMigrationNameLength)
    };
  } else if ((0, import_internals.isCi)() && Boolean((_a = import_prompts.prompt._injected) == null ? void 0 : _a.length) === false) {
    return {
      name: ""
    };
  }
  const response = await (0, import_prompts.prompt)({
    type: "text",
    name: "name",
    message: `Enter a name for the new migration:`
  });
  if (!("name" in response)) {
    return {
      userCancelled: "Canceled by user."
    };
  }
  return {
    name: (0, import_slugify.default)(response.name, { separator: "_" }).substring(0, maxMigrationNameLength) || ""
  };
}
__name(getMigrationName, "getMigrationName");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getMigrationName
});
