"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var setupMongo_exports = {};
__export(setupMongo_exports, {
  inspectMongo: () => inspectMongo,
  setupMongo: () => setupMongo,
  tearDownMongo: () => tearDownMongo
});
module.exports = __toCommonJS(setupMongo_exports);
var import_mongoose = __toESM(require("mongoose"));
var import_path = __toESM(require("path"));
async function setupMongo(options) {
  const { connectionString, dirname } = options;
  const dbDefault = import_mongoose.default.createConnection(connectionString);
  await dbDefault.dropDatabase();
  await dbDefault.close();
  if (dirname !== "") {
    const db = import_mongoose.default.createConnection(connectionString);
    await db.dropDatabase();
    const setupPath = import_path.default.join(dirname, "setup");
    const { setup } = require(setupPath);
    await setup(db);
    await db.close();
  }
}
__name(setupMongo, "setupMongo");
async function inspectMongo(options) {
  const { connectionString, dirname } = options;
  const db = import_mongoose.default.createConnection(connectionString);
  const inspectPath = import_path.default.join(dirname, "setup");
  const { inspect } = require(inspectPath);
  const result = await inspect(db);
  await db.close();
  return result;
}
__name(inspectMongo, "inspectMongo");
async function tearDownMongo(options) {
  const { connectionString } = options;
  const dbDefault = import_mongoose.default.createConnection(connectionString);
  await dbDefault.dropDatabase();
  await dbDefault.close();
}
__name(tearDownMongo, "tearDownMongo");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  inspectMongo,
  setupMongo,
  tearDownMongo
});
