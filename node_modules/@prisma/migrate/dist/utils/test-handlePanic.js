"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var import_internals = require("@prisma/internals");
var import_path = __toESM(require("path"));
async function main() {
  const error = new import_internals.RustPanic(
    "Some error message!\n".repeat(23),
    "",
    void 0,
    import_internals.ErrorArea.LIFT_CLI,
    import_path.default.resolve(import_path.default.join("fixtures", "blog", "prisma", "schema.prisma"))
  );
  const packageJsonVersion = "0.0.0";
  const engineVersion = "734ab53bd8e2cadf18b8b71cb53bf2d2bed46517";
  await (0, import_internals.handlePanic)(error, packageJsonVersion, engineVersion, "something-test").catch((e) => {
    console.log(e);
  }).finally(() => {
    process.exit(1);
  });
}
__name(main, "main");
void main();
